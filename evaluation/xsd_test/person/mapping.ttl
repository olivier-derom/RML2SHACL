@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix ex: <http://example.com/>.

ex:PersonMapping
  a rr:TriplesMap;
  rml:logicalSource [
    rml:source "data.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/people/person"
  ];
  rr:subjectMap [
    rr:template "http://example.com/person/{@id}";
    rr:class ex:person
  ];
  rr:predicateObjectMap [
    rr:predicate ex:firstname;
    rr:objectMap [
      rml:reference "firstname";
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ex:lastname;
    rr:objectMap [
      rml:reference "lastname";
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ex:Dob;
    rr:objectMap [
      rml:reference "Dob";
      rr:datatype xsd:date;
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ex:age;
    rr:objectMap [
      rml:reference "age";
      rr:datatype xsd:integer;
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ex:phone;
    rr:objectMap [
      rml:reference "phone";
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ex:team;
    rr:objectMap [
      rml:reference "team";
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ex:hasAddress;
    rr:objectMap [
      rml:parentTriplesMap ex:AddressMapping;
      rml:joinCondition [
        rr:child "../@id";
        rr:parent "../@id"
      ];
    ];
  ].
  
ex:AddressMapping
  a rr:TriplesMap;
  rml:logicalSource [
    rml:source "data.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/people/person/address"
  ];
  rr:subjectMap [
    rr:template "http://example.com/address/{../../@id}/{zip}";
    rr:class ex:address
  ];
  rr:predicateObjectMap [
    rr:predicate ex:street;
    rr:objectMap [
      rml:reference "street";
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ex:city;
    rr:objectMap [
      rml:reference "city";
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ex:state;
    rr:objectMap [
      rml:reference "state";
    ];
  ];
  rr:predicateObjectMap [
    rr:predicate ex:zip;
    rr:objectMap [
      rml:reference "zip";
    ];
  ].
